buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:7.6.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.example.generatingmodels.GeneratingModelsApplication'
        )
    }
}

apply plugin: 'org.openapi.generator'

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/openapi.yaml"
    outputDir = "$buildDir/generated/sources/openapi"
    modelPackage = "org.example.generatingmodels.generated.model"
    generateModelTests = false
    globalProperties = [
            // force only the models
            apis: "false",
            invokers: "false",
            models: "",

    ]
    configOptions = [
            dateLibrary: "java8",
            additionalModelTypeAnnotations: "@lombok.Data, @lombok.AllArgsConstructor, @lombok.NoArgsConstructor"


    ]
}


group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.22'
    implementation 'org.openapitools:openapi-generator:7.6.0'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
